// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleExam2.Models;

#nullable disable

namespace SampleExam2.Migrations
{
    [DbContext(typeof(MusicianDbContext))]
    [Migration("20240609151627_DatabaseAdded")]
    partial class DatabaseAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicianSong", b =>
                {
                    b.Property<int>("MusiciansidMusician")
                        .HasColumnType("int");

                    b.Property<int>("SongsIdSong")
                        .HasColumnType("int");

                    b.HasKey("MusiciansidMusician", "SongsIdSong");

                    b.HasIndex("SongsIdSong");

                    b.ToTable("MusicianSong");
                });

            modelBuilder.Entity("SampleExam2.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"));

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("LabelIdLabel")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbum");

                    b.HasIndex("LabelIdLabel");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("SampleExam2.Models.Label", b =>
                {
                    b.Property<int>("IdLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLabel"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdLabel");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("SampleExam2.Models.Musician", b =>
                {
                    b.Property<int>("idMusician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMusician"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idMusician");

                    b.ToTable("Musicians");
                });

            modelBuilder.Entity("SampleExam2.Models.Song", b =>
                {
                    b.Property<int>("IdSong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSong"));

                    b.Property<int?>("AlbumIdAlbum")
                        .HasColumnType("int");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int>("IdAlbum")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdSong");

                    b.HasIndex("AlbumIdAlbum");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicianSong", b =>
                {
                    b.HasOne("SampleExam2.Models.Musician", null)
                        .WithMany()
                        .HasForeignKey("MusiciansidMusician")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SampleExam2.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsIdSong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SampleExam2.Models.Album", b =>
                {
                    b.HasOne("SampleExam2.Models.Label", "Label")
                        .WithMany("Albums")
                        .HasForeignKey("LabelIdLabel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Label");
                });

            modelBuilder.Entity("SampleExam2.Models.Song", b =>
                {
                    b.HasOne("SampleExam2.Models.Album", null)
                        .WithMany("Songs")
                        .HasForeignKey("AlbumIdAlbum");
                });

            modelBuilder.Entity("SampleExam2.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("SampleExam2.Models.Label", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
